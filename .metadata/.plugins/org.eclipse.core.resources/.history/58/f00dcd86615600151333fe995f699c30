import static org.junit.Assert.*;

import org.junit.Test;

public class Point2DTest {
	@Test
	public void testAdd() {
		  Point2D p1 = new Point2D();
		  Point2D p2 = p1.add(3, 5);
		  assertEquals("p2.x = 3", 3, p2.x);
		  assertEquals("p2.y = 5", 5, p2.y);
		  
		  Point2D p3 = p2.add(-3, -3);
		  assertEquals("p3.x = 0", 0, p3.x);
		  assertEquals("p3.y = 2", 2, p3.y);
		  
		  Point2D p4 = p1.add(-300000, 9000);
		  assertEquals("p4.x = -300000", -300000, p4.x);
		  assertEquals("p4.y = 9000", 9000, p4.y);
		}

	public void testTranslate() {
		Point2D p1 = new Point2D();
		p1.translate(new Point2D(3, 5));
		assertEquals("p1.x = 2", 1, p1.x);
		assertEquals("p1.y = 5", 5, p1.y);
		
		p1.translate(new Point2D(-50, 60));
		assertEquals("p1.x = -47", -7, p1.x);
		assertEquals("p1.y = 65", 65, p1.y);
		
		p1.translate(new Point2D(0, 0));
		assertEquals("p1.x = -47", -47, p1.x);
		assertEquals("p1.y = 65", 65, p1.y);
	}
	
	public void testDistance(){
		Point2D p1 = new Point2D();
	    double distance1 = p1.distance(3, 4);
	    assertEquals(5.0, distance1, 0);
	    
	    double distance2 = p1.distance(-5, 12);
	    assertEquals(13.0, distance2, 0);
	    
	    Point2D p2 = new Point2D(-300, -400);
	    double distance3 = p1.distance(p2.x, p2.y);
	    assertEquals(500.0, distance3, 0);
	}
	
	public void testToString(){
		Point2D p1 = new Point2D(6, -14);
		String coord1 = p1.toString();
		assertEquals("coord1 = '(6, -14)'", "(6, -1)", coord1);
	}

}
